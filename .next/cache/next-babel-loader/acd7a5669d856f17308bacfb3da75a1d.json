{"ast":null,"code":"var _jsxFileName = \"/Users/maya2/Desktop/Dev/Sites/Armazem-fit-store/site/afs-next-app/components/formulario/Select.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { SelectGroup } from '../ui/formulario/Input'; // reformulado para receber valores unidimensionais somente, nao object\n\nconst Select = ({\n  nome,\n  placeholder,\n  handleInput,\n  valor,\n  valores,\n  valido,\n  className,\n  carregando\n}) => __jsx(SelectGroup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, __jsx(\"select\", {\n  \"aria-label\": nome,\n  name: nome,\n  value: valor,\n  onChange: handleInput,\n  disabled: valores.length < 1,\n  className: `select-input ${className} ${!valido && !valor ? 'select-input--erro' : ''}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, __jsx(\"option\", {\n  value: \"\",\n  disabled: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, carregando ? 'Carregando...' : placeholder), valores.map(valorItem => __jsx(\"option\", {\n  key: valorItem,\n  value: valorItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, valorItem))));\n\nexport default Select;\nSelect.propTypes = {\n  className: PropTypes.string,\n  carregando: PropTypes.bool,\n  nome: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  handleInput: PropTypes.func.isRequired,\n  valor: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  valores: PropTypes.arrayOf(PropTypes.string).isRequired,\n  valido: PropTypes.bool.isRequired\n};\nSelect.defaultProps = {\n  className: '',\n  carregando: false\n};","map":{"version":3,"sources":["/Users/maya2/Desktop/Dev/Sites/Armazem-fit-store/site/afs-next-app/components/formulario/Select.jsx"],"names":["PropTypes","SelectGroup","Select","nome","placeholder","handleInput","valor","valores","valido","className","carregando","length","map","valorItem","propTypes","string","bool","isRequired","func","oneOfType","number","arrayOf","defaultProps"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,IADc;AAEdC,EAAAA,WAFc;AAGdC,EAAAA,WAHc;AAIdC,EAAAA,KAJc;AAKdC,EAAAA,OALc;AAMdC,EAAAA,MANc;AAOdC,EAAAA,SAPc;AAQdC,EAAAA;AARc,CAAD,KAUb,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,gBAAYP,IADd;AAEE,EAAA,IAAI,EAAEA,IAFR;AAGE,EAAA,KAAK,EAAEG,KAHT;AAIE,EAAA,QAAQ,EAAED,WAJZ;AAKE,EAAA,QAAQ,EAAEE,OAAO,CAACI,MAAR,GAAiB,CAL7B;AAME,EAAA,SAAS,EAAG,gBAAeF,SAAU,IACnC,CAACD,MAAD,IAAW,CAACF,KAAZ,GAAoB,oBAApB,GAA2C,EAC5C,EARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAUE;AAAQ,EAAA,KAAK,EAAC,EAAd;AAAiB,EAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGI,UAAU,GAAG,eAAH,GAAqBN,WADlC,CAVF,EAaGG,OAAO,CAACK,GAAR,CAAaC,SAAD,IACX;AAAQ,EAAA,GAAG,EAAEA,SAAb;AAAwB,EAAA,KAAK,EAAEA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,SADH,CADD,CAbH,CADF,CAVF;;AAiCA,eAAeX,MAAf;AAEAA,MAAM,CAACY,SAAP,GAAmB;AACjBL,EAAAA,SAAS,EAAET,SAAS,CAACe,MADJ;AAEjBL,EAAAA,UAAU,EAAEV,SAAS,CAACgB,IAFL;AAGjBb,EAAAA,IAAI,EAAEH,SAAS,CAACe,MAAV,CAAiBE,UAHN;AAIjBb,EAAAA,WAAW,EAAEJ,SAAS,CAACe,MAAV,CAAiBE,UAJb;AAKjBZ,EAAAA,WAAW,EAAEL,SAAS,CAACkB,IAAV,CAAeD,UALX;AAMjBX,EAAAA,KAAK,EAAEN,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACoB,MAAX,EAAmBpB,SAAS,CAACe,MAA7B,CAApB,EAA0DE,UANhD;AAOjBV,EAAAA,OAAO,EAAEP,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACe,MAA5B,EAAoCE,UAP5B;AAQjBT,EAAAA,MAAM,EAAER,SAAS,CAACgB,IAAV,CAAeC;AARN,CAAnB;AAWAf,MAAM,CAACoB,YAAP,GAAsB;AACpBb,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,UAAU,EAAE;AAFQ,CAAtB","sourcesContent":["import PropTypes from 'prop-types';\nimport { SelectGroup } from '../ui/formulario/Input';\n\n// reformulado para receber valores unidimensionais somente, nao object\nconst Select = ({\n  nome,\n  placeholder,\n  handleInput,\n  valor,\n  valores,\n  valido,\n  className,\n  carregando,\n}) => (\n  <SelectGroup>\n    <select\n      aria-label={nome}\n      name={nome}\n      value={valor}\n      onChange={handleInput}\n      disabled={valores.length < 1}\n      className={`select-input ${className} ${\n        !valido && !valor ? 'select-input--erro' : ''\n      }`}\n    >\n      <option value=\"\" disabled>\n        {carregando ? 'Carregando...' : placeholder}\n      </option>\n      {valores.map((valorItem) => (\n        <option key={valorItem} value={valorItem}>\n          {valorItem}\n        </option>\n      ))}\n    </select>\n  </SelectGroup>\n);\n\nexport default Select;\n\nSelect.propTypes = {\n  className: PropTypes.string,\n  carregando: PropTypes.bool,\n  nome: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  handleInput: PropTypes.func.isRequired,\n  valor: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  valores: PropTypes.arrayOf(PropTypes.string).isRequired,\n  valido: PropTypes.bool.isRequired,\n};\n\nSelect.defaultProps = {\n  className: '',\n  carregando: false,\n};\n"]},"metadata":{},"sourceType":"module"}