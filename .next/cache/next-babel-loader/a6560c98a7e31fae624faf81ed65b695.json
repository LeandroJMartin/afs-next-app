{"ast":null,"code":"var _jsxFileName = \"/Users/maya2/Desktop/Dev/Sites/Armazem-fit-store/site/afs-next-app/components/layout/Navbar/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { useAmp } from 'next/amp';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport Menu from './Menu';\nimport Icon from '../../ui/icons/Icon';\nimport Logo from '../Logo';\nconst LogoNav = styled(Logo)`\n  width: 20rem;\n\n  @media(max-width: 1075px) {\n    width: 8rem;\n    margin-right: 2rem;\n  }\n\n  @media(max-width: 980px) {\n    width: 20rem;\n    margin-right: 0;\n  }\n\n  @media(max-width: 600px) {\n    width: 10rem;\n    margin-right: 0;\n  }\n`;\nconst NavStyled = styled.nav`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-around;\n  padding-top: 1rem;\n`;\nconst MenuToggle = styled.button`\n  border: none;\n  background: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  align-self: flex-start;\n  margin-top: 1rem;\n`;\nconst IconMenu = styled(Icon)`\n  width: 2rem;\n  height: 2rem;\n  fill: ${props => props.theme.client.colors.verdeFolha};\n  @media (min-width: 981px) {\n    display: none;\n  }\n`;\n\nconst Navbar = ({\n  className\n}) => {\n  const {\n    0: menuAberto,\n    1: setMenuAberto\n  } = useState(false);\n  const isAmp = useAmp();\n  useEffect(() => {\n    // identifica se sera necessario abrir a nav por padrao -- users vindo das AMPs\n    const urlParams = new URLSearchParams(window.location.search);\n    const openNav = urlParams.get('on');\n\n    if (openNav) {\n      setMenuAberto(true);\n    }\n\n    const handleRouteChange = () => {\n      setMenuAberto(false);\n    };\n\n    Router.events.on('routeChangeStart', handleRouteChange);\n    return () => {\n      Router.events.off('routeChangeStart', handleRouteChange);\n    };\n  }, []);\n  return __jsx(NavStyled, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    title: \"In\\xEDcio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(LogoNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))), __jsx(Menu, {\n    fechar: () => setMenuAberto(false),\n    visivel: menuAberto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), !isAmp ? __jsx(MenuToggle, {\n    \"aria-label\": \"Abrir menu\",\n    onClick: () => setMenuAberto(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(IconMenu, {\n    icon: menuAberto ? 'close' : 'menu',\n    tipo: \"svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })) : __jsx(\"a\", {\n    href: \"?on=1\",\n    title: \"Abrir menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(MenuToggle, {\n    \"aria-label\": \"Abrir menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, __jsx(IconMenu, {\n    icon: \"menu\",\n    tipo: \"svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }))));\n};\n\nNavbar.propTypes = {\n  className: PropTypes.string\n};\nNavbar.defaultProps = {\n  className: ''\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/maya2/Desktop/Dev/Sites/Armazem-fit-store/site/afs-next-app/components/layout/Navbar/index.jsx"],"names":["styled","useAmp","Link","PropTypes","useState","useEffect","Router","Menu","Icon","Logo","LogoNav","NavStyled","nav","MenuToggle","button","IconMenu","props","theme","client","colors","verdeFolha","Navbar","className","menuAberto","setMenuAberto","isAmp","urlParams","URLSearchParams","window","location","search","openNav","get","handleRouteChange","events","on","off","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport { useAmp } from 'next/amp';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport Menu from './Menu';\nimport Icon from '../../ui/icons/Icon';\nimport Logo from '../Logo';\n\nconst LogoNav = styled(Logo)`\n  width: 20rem;\n\n  @media(max-width: 1075px) {\n    width: 8rem;\n    margin-right: 2rem;\n  }\n\n  @media(max-width: 980px) {\n    width: 20rem;\n    margin-right: 0;\n  }\n\n  @media(max-width: 600px) {\n    width: 10rem;\n    margin-right: 0;\n  }\n`;\n\nconst NavStyled = styled.nav`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-around;\n  padding-top: 1rem;\n`;\n\nconst MenuToggle = styled.button`\n  border: none;\n  background: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  align-self: flex-start;\n  margin-top: 1rem;\n`;\n\nconst IconMenu = styled(Icon)`\n  width: 2rem;\n  height: 2rem;\n  fill: ${(props) => props.theme.client.colors.verdeFolha};\n  @media (min-width: 981px) {\n    display: none;\n  }\n`;\n\nconst Navbar = ({ className }) => {\n  const [menuAberto, setMenuAberto] = useState(false);\n\n  const isAmp = useAmp();\n\n  useEffect(() => {\n    // identifica se sera necessario abrir a nav por padrao -- users vindo das AMPs\n    const urlParams = new URLSearchParams(window.location.search);\n    const openNav = urlParams.get('on');\n    if (openNav) {\n      setMenuAberto(true);\n    }\n\n    const handleRouteChange = () => {\n      setMenuAberto(false);\n    };\n\n    Router.events.on('routeChangeStart', handleRouteChange);\n    return () => {\n      Router.events.off('routeChangeStart', handleRouteChange);\n    };\n  }, []);\n\n  return (\n    <NavStyled className={className}>\n      <Link href=\"/\">\n        <a title=\"InÃ­cio\">\n          <LogoNav />\n        </a>\n      </Link>\n      <Menu fechar={() => setMenuAberto(false)} visivel={menuAberto} />\n      {!isAmp ? (\n        <MenuToggle aria-label=\"Abrir menu\" onClick={() => setMenuAberto(true)}>\n          <IconMenu icon={menuAberto ? 'close' : 'menu'} tipo=\"svg\" />\n        </MenuToggle>\n      ) : (\n        <a href=\"?on=1\" title=\"Abrir menu\">\n          <MenuToggle aria-label=\"Abrir menu\">\n            <IconMenu icon=\"menu\" tipo=\"svg\" />\n          </MenuToggle>\n        </a>\n      )}\n    </NavStyled>\n  );\n};\n\nNavbar.propTypes = {\n  className: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  className: '',\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}