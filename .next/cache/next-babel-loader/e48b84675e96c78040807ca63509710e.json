{"ast":null,"code":"var _jsxFileName = \"/Users/maya2/Desktop/Dev/Sites/Armazem-fit-store/site/afs-next-app/components/ui/icons/Icon.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nconst IconSVG = styled.svg`\n  width: ${props => props.tamanho};\n  height: ${props => props.tamanho};\n  fill: ${props => props.cor};\n`;\nconst IconImage = styled.div`\n  width: ${props => props.tamanho};\n  height: ${props => props.tamanho};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  img {\n    object-fit: contain;\n  }\n`;\n\nconst Icon = ({\n  tamanho,\n  cor,\n  icon,\n  tipo,\n  className,\n  alt\n}) => tipo && tipo === 'svg' ? __jsx(IconSVG, {\n  tamanho: tamanho,\n  cor: cor,\n  className: className,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, __jsx(\"use\", {\n  xlinkHref: `/static/icons/icomoon/symbol-defs.svg#icon-${icon}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n})) : __jsx(IconImage, {\n  className: className,\n  tamanho: tamanho,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }\n}, __jsx(\"picture\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, __jsx(\"source\", {\n  type: \"image/webp\",\n  srcSet: `/static/icons/custom/${icon}.webp`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }\n}), __jsx(\"img\", {\n  src: `/static/icons/custom/${icon}.png`,\n  alt: alt,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n})));\n\nIcon.propTypes = {\n  tamanho: PropTypes.string,\n  cor: PropTypes.string,\n  className: PropTypes.string,\n  icon: PropTypes.string.isRequired,\n  tipo: PropTypes.oneOf(['svg', 'image']).isRequired,\n  alt: PropTypes.string\n};\nIcon.defaultProps = {\n  className: '',\n  cor: '#000',\n  alt: '',\n  tamanho: '4rem'\n};\nexport default Icon;","map":{"version":3,"sources":["/Users/maya2/Desktop/Dev/Sites/Armazem-fit-store/site/afs-next-app/components/ui/icons/Icon.jsx"],"names":["styled","PropTypes","IconSVG","svg","props","tamanho","cor","IconImage","div","Icon","icon","tipo","className","alt","propTypes","string","isRequired","oneOf","defaultProps"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;AAC3B,WAAYC,KAAD,IAAWA,KAAK,CAACC,OAAQ;AACpC,YAAaD,KAAD,IAAWA,KAAK,CAACC,OAAQ;AACrC,UAAWD,KAAD,IAAWA,KAAK,CAACE,GAAI;AAC/B,CAJA;AAMA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI;AAC7B,WAAYJ,KAAD,IAAWA,KAAK,CAACC,OAAQ;AACpC,YAAaD,KAAD,IAAWA,KAAK,CAACC,OAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,MAAMI,IAAI,GAAG,CAAC;AACZJ,EAAAA,OADY;AACHC,EAAAA,GADG;AACEI,EAAAA,IADF;AACQC,EAAAA,IADR;AACcC,EAAAA,SADd;AACyBC,EAAAA;AADzB,CAAD,KAENF,IAAI,IAAIA,IAAI,KAAK,KAAjB,GACL,MAAC,OAAD;AAAS,EAAA,OAAO,EAAEN,OAAlB;AAA2B,EAAA,GAAG,EAAEC,GAAhC;AAAqC,EAAA,SAAS,EAAEM,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAG,8CAA6CF,IAAK,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADK,GAKL,MAAC,SAAD;AAAW,EAAA,SAAS,EAAEE,SAAtB;AAAiC,EAAA,OAAO,EAAEP,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,IAAI,EAAC,YADP;AAEE,EAAA,MAAM,EAAG,wBAAuBK,IAAK,OAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAKE;AAAK,EAAA,GAAG,EAAG,wBAAuBA,IAAK,MAAvC;AAA8C,EAAA,GAAG,EAAEG,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADF,CAPF;;AAkBAJ,IAAI,CAACK,SAAL,GAAiB;AACfT,EAAAA,OAAO,EAAEJ,SAAS,CAACc,MADJ;AAEfT,EAAAA,GAAG,EAAEL,SAAS,CAACc,MAFA;AAGfH,EAAAA,SAAS,EAAEX,SAAS,CAACc,MAHN;AAIfL,EAAAA,IAAI,EAAET,SAAS,CAACc,MAAV,CAAiBC,UAJR;AAKfL,EAAAA,IAAI,EAAEV,SAAS,CAACgB,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,CAAhB,EAAkCD,UALzB;AAMfH,EAAAA,GAAG,EAAEZ,SAAS,CAACc;AANA,CAAjB;AASAN,IAAI,CAACS,YAAL,GAAoB;AAClBN,EAAAA,SAAS,EAAE,EADO;AAElBN,EAAAA,GAAG,EAAE,MAFa;AAGlBO,EAAAA,GAAG,EAAE,EAHa;AAIlBR,EAAAA,OAAO,EAAE;AAJS,CAApB;AAOA,eAAeI,IAAf","sourcesContent":["import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst IconSVG = styled.svg`\n  width: ${(props) => props.tamanho};\n  height: ${(props) => props.tamanho};\n  fill: ${(props) => props.cor};\n`;\n\nconst IconImage = styled.div`\n  width: ${(props) => props.tamanho};\n  height: ${(props) => props.tamanho};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  img {\n    object-fit: contain;\n  }\n`;\n\nconst Icon = ({\n  tamanho, cor, icon, tipo, className, alt,\n}) => (tipo && tipo === 'svg' ? (\n  <IconSVG tamanho={tamanho} cor={cor} className={className}>\n    <use xlinkHref={`/static/icons/icomoon/symbol-defs.svg#icon-${icon}`} />\n  </IconSVG>\n) : (\n  <IconImage className={className} tamanho={tamanho}>\n    <picture>\n      <source\n        type=\"image/webp\"\n        srcSet={`/static/icons/custom/${icon}.webp`}\n      />\n      <img src={`/static/icons/custom/${icon}.png`} alt={alt} />\n    </picture>\n  </IconImage>\n));\n\nIcon.propTypes = {\n  tamanho: PropTypes.string,\n  cor: PropTypes.string,\n  className: PropTypes.string,\n  icon: PropTypes.string.isRequired,\n  tipo: PropTypes.oneOf(['svg', 'image']).isRequired,\n  alt: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  className: '',\n  cor: '#000',\n  alt: '',\n  tamanho: '4rem',\n};\n\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}